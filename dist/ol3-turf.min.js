/* ol3-turf 0.1.1 (c) Daniel Pulido <dpmcmlxxvi@gmail.com> */
window.ol3turf=window.ol3turf||{},window.ol3turf.PREFIX="ol3-turf",window.ol3turf.PROJECTION_TURF="EPSG:4326",window.ol3turf.PROJECTION_OL3="EPSG:3857",ol.control.Turf=function(a){"use strict";var b=this,c=a||{};c.ol3turf=c.ol3turf||{},void 0===c.ol3turf.controls&&(c.ol3turf.controls=ol3turf.toolbars.all()),void 0===c.ol3turf.handler&&(c.ol3turf.handler=new ol3turf.Handler(b)),void 0===c.ol3turf.style&&(c.ol3turf.style="ol3-turf-toolbar"),void 0===c.ol3turf.prefix&&(c.ol3turf.prefix=ol3turf.PREFIX),void 0===c.element&&(c.element=document.createElement("div")),""===c.element.className&&(c.element.className=c.ol3turf.style+" ol-unselectable ol-control");var d={};c.ol3turf.controls.forEach(function(a){if(void 0!==ol3turf.controls[a]){var e=ol3turf.controls[a].create(b,c.ol3turf.prefix);d[a]=e,c.element.appendChild(e.element)}}),this.ol3turf={controls:d,element:c.element,handler:c.ol3turf.handler},ol.control.Control.call(this,c)},ol.inherits(ol.control.Turf,ol.control.Control),function(a){"use strict";a.utils=a.utils||{},a.utils.extend=function(b,c){void 0!==b&&void 0!==c&&Object.keys(b).forEach(function(d){var e=b[d];return null!==e&&"object"==typeof e?(void 0===c[d]&&(c[d]={}),void a.utils.extend(e,c[d])):void(c[d]=e)})},a.utils.getClass=function(b,c){return"."+a.utils.getName(b,c)},a.utils.getCollection=function(a,b,c){var d=a.getFeatures();if(d.features.length<b)throw new Error("Number of features less than "+b);if(d.features.length>c)throw new Error("Number of features greater than "+c);return d},a.utils.getControlInput=function(a,b,c,d){return{title:c,type:"input",attributes:{name:a,onclick:b,type:"submit",value:d}}},a.utils.getControlNumber=function(a,b,c,d,e,f,g){return{title:b,type:"input",attributes:{id:a,name:a,min:f,max:g,step:e,title:c,type:"number",value:d}}},a.utils.getControlSelect=function(a,b,c){return{title:b,type:"select",attributes:{id:a,name:a},options:c}},a.utils.getControlText=function(a,b,c){return{title:b,type:"input",attributes:{id:a,name:a,title:c,type:"text"}}},a.utils.getElement=function(b,c,d){return b+"[name='"+a.utils.getName(c,d)+"']"},a.utils.getFeatures=function(a,b,c,d){var e=[];if(b.features.forEach(function(b){a.indexOf(b.geometry.type)>-1&&e.push(b)}),e.length<c)throw new Error("Number of '"+a+"' features less than "+c);if(e.length>d)throw new Error("Number of '"+a+"' features greater than "+d);return e},a.utils.getFormArray=function(b,c){var d=a.utils.getFormString(b,c),e=[];return d.split(",").forEach(function(a){var b=parseFloat(a);if(Number(b)!==b)throw new Error("Invalid "+c);e.push(b)}),e},a.utils.getFormInteger=function(a,b){var c=parseInt(document.getElementById(a).value,10);if(Number(c)!==c)throw new Error("Invalid "+b);return c},a.utils.getFormNumber=function(a,b){var c=parseFloat(document.getElementById(a).value);if(Number(c)!==c)throw new Error("Invalid "+b);return c},a.utils.getFormString=function(a,b){var c=document.getElementById(a).value;if(!c||!c.trim())throw new Error("Invalid "+b);return c},a.utils.getId=function(b,c){return"#"+a.utils.getName(b,c)},a.utils.getLines=function(b,c,d){return a.utils.getFeatures(["LineString"],b,c,d)},a.utils.getName=function(b,c){void 0===c&&(c=a.PREFIX);var d=c;return b.forEach(function(a){d+="-"+a}),d},a.utils.getOptionsGeometry=function(){return[{text:"Points",attributes:{selected:"selected",value:"points"}},{text:"Polygons",attributes:{value:"polygons"}}]},a.utils.getOptionsGrids=function(){return[{text:"Hexagons",attributes:{selected:"selected",value:"hexagons"}},{text:"Triangles",attributes:{value:"triangles"}}]},a.utils.getOptionsQuality=function(){return[{text:"High",attributes:{value:"high"}},{text:"Low",attributes:{selected:"selected",value:"low"}}]},a.utils.getOptionsUnits=function(){return[{text:"degrees",attributes:{value:"degrees"}},{text:"kilometers",attributes:{selected:"selected",value:"kilometers"}},{text:"miles",attributes:{value:"miles"}},{text:"radians",attributes:{value:"radians"}}]},a.utils.getPoints=function(b,c,d){return a.utils.getFeatures(["Point"],b,c,d)},a.utils.getPolygons=function(b,c,d){return a.utils.getFeatures(["Polygon"],b,c,d)},a.utils.getPolygonsAll=function(b,c,d){return a.utils.getFeatures(["Polygon","MultiPolygon"],b,c,d)}}(ol3turf||{}),function(a){"use strict";function b(a,b,c){var d=b.right-(a.left+a.width),e=a.left+d;d<0&&e>0&&(a.left+=d-c.width/2)}function c(a,b,c){var d=b.bottom-(a.top+a.height),e=a.top+d;d<0&&e>0&&(a.top+=d-c.height/2)}function d(a){var b=a.getBoundingClientRect(),c=0,d=0;do d+=a.offsetTop||0,c+=a.offsetLeft||0,a=a.offsetParent;while(a);var e={bottom:d+b.height,height:b.height,left:c,right:c+b.width,top:d,width:b.width};return e}function e(a,b,c,d){var e=0,f=c.left+c.width;return e=d.left-b.left>.5*b.width?-c.width+-a.width+-d.width/2:d.width/2,f+=e}function f(a,b,c,d){var e=0,f=c.bottom;return e=d.top-b.top>.5*b.height?-c.height+-a.height+-d.height/2:d.height/2,f+=e}function g(a,b,c,d){c.width>c.height?a.top=f(a,b,c,d):a.left=e(a,b,c,d)}a.controls=a.controls||{};var h=function(b){var c=b||{},d=this;this.button=document.createElement("button"),this.button.addEventListener("click",this.run.bind(this),!1),this.button.addEventListener("touchstart",this.run.bind(this),!1),Object.keys(c).forEach(function(a){d.button[a]=c[a]}),this.element=document.createElement("div"),this.element.className="ol3-turf-control",this.element.appendChild(this.button),this.toolbar=null,this.form=null,this.prefix=a.PREFIX};return h.prototype.action=function(){throw new Error("Control action not implemented!")},h.prototype.addFeatures=function(a){var b=this.getProjectionMap(),c=this.getProjectionTurf(),d=new ol.format.GeoJSON,e=new ol.layer.Vector({source:new ol.source.Vector({features:d.readFeatures(a,{dataProjection:c,featureProjection:b})})});this.getMap().addLayer(e)},h.prototype.getFeatures=function(){var a=this.getProjectionMap(),b=this.getProjectionTurf(),c=new ol.format.GeoJSON,d=[],e=this.getSelectors();return e.forEach(function(e){var f=e.getFeatures();f.forEach(function(e){d.push(c.writeFeatureObject(e,{dataProjection:b,featureProjection:a}))})}),turf.featureCollection(d)},h.prototype.getFormPosition=function(a){var e=d(this.button),f=d(a),h=d(this.getMap().getTargetElement()),i=d(this.toolbar.ol3turf.element);return f.top=e.top,f.left=e.left,g(f,h,i,e),b(f,h,e),c(f,h,e),f.top-=h.top,f.left-=h.left,{top:f.top,left:f.left}},h.prototype.getMap=function(){if(null===this.toolbar)return null;var a=this.toolbar.getMap();return a},h.prototype.getProjectionMap=function(){var b=a.PROJECTION_OL3,c=this.getMap().getView().getProjection();return void 0!==c&&(b=c.getCode()),b},h.prototype.getProjectionTurf=function(){return a.PROJECTION_TURF},h.prototype.getSelectors=function(){var a=[],b=this.getMap();return null===b?a:(b.getInteractions().forEach(function(b){b instanceof ol.interaction.Select&&a.push(b)}),a)},h.prototype.run=function(){try{this.action()}catch(a){this.showMessage(a.message)}},h.prototype.showForm=function(b,c){var d=this.toolbar.element.parentNode;if(null!==this.form&&(d.removeChild(this.form),this.form=null),void 0!==b){var e={style:{visibility:"hidden"}};void 0===c&&(c="ol3-turf-form"),this.form=a.form(d,c,b,e);var f=this.getFormPosition(this.form);this.form.style.left=f.left+"px",this.form.style.top=f.top+"px",this.form.style.visibility="visible"}},h.prototype.showMessage=function(b){var c=null,d=this.toolbar.ol3turf.element.parentNode,e={style:{visibility:"hidden"}},f=a.popup(b,c,d,e),g=this.getFormPosition(f);f.style.left=g.left+"px",f.style.top=g.top+"px",f.style.visibility="visible"},h.create=function(b,c,d,e,f){var g=a.utils.getName([d]),h=a.utils.getName(["control","button"]),i=a.utils.getName([d],c),j={className:g+" "+h,id:i,title:e},k=new a.Control(j);return k.prefix=c,k.toolbar=b,k.action=function(){return f(k)},k},a.Control=h,a}(ol3turf||{}),function(a){"use strict";a.form=function(b,c,d,e){var f=null;if(f="string"==typeof b?document.getElementById(b):b,null===f)throw new Error("ol3turf.form: Parent element not found.");if(void 0===c)throw new Error("ol3turf.form: Form ID not provided.");if(void 0===d)throw new Error("ol3turf.form: Form controls not provided.");var g=document.createElement("form");g.id=c,g.className="ol3-turf-form ol-unselectable ol-control",g.setAttribute("onsubmit","return false;"),a.utils.extend(e,g);var h=document.createElement("table");return h.className="ol3-turf-form-table",d.forEach(function(b){var c=document.createElement("tr");c.className="ol3-turf-form-row";var d=document.createElement("th");d.innerHTML=b.title,d.className="ol3-turf-form-header",c.appendChild(d);var e=document.createElement("td");e.className="ol3-turf-form-data";var f=document.createElement(b.type);f.className="ol3-turf-form-input",a.utils.extend(b.attributes,f),"select"===b.type&&(f.className="ol3-turf-form-select",void 0!==b.options&&b.options.forEach(function(b){var c=document.createElement("option");c.innerHTML=b.text,c.className="ol3-turf-form-option",a.utils.extend(b.attributes,c),f.appendChild(c)})),e.appendChild(f),c.appendChild(e),h.appendChild(c)}),g.appendChild(h),f.appendChild(g),g}}(ol3turf||{}),function(a){"use strict";var b=function(a){this.toolbar=a};return b.prototype.callback=function(a,b,c){var d=this.toolbar.ol3turf.controls[a];if("area"===a)d.showMessage("area = "+b+" msq");else if("bearing"===a)d.showMessage("bearing = "+b+" degrees");else if("distance"===a)d.showMessage("distance = "+b+" "+c.units);else if("inside"===a){var e="Point is";b===!1&&(e+=" not"),e+=" inside polygon.",d.showMessage(e)}else"line-distance"===a?d.showMessage("length = "+b+" "+c.units):"planepoint"===a?d.showMessage("z = "+b):d.addFeatures(b)},a.Handler=b,a}(ol3turf||{}),function(a){"use strict";a.popup=function(b,c,d,e){function f(){void 0!==c&&null!==c&&c(),a.popup()}var g="ol3-turf-popup",h=document.getElementById(g),i=null;if(null!==h&&(i=h.parentNode,null!==i&&i.removeChild(h)),void 0!==b&&null!==b){var j=document.body;void 0!==d&&null!==d&&(j=d);var k=document.createElement("div");k.className=g,k.id=g,a.utils.extend(e,k);var l=document.createElement("div");l.className="ol3-turf-popup-message",l.innerHTML=b;var m=document.createElement("button");m.className="ol3-turf-popup-button",m.innerHTML="OK",m.onclick=f,m.type="button";var n=document.createElement("div");return n.className="ol3-turf-popup-button-container",n.appendChild(m),k.appendChild(l),k.appendChild(n),j.appendChild(k),k}}}(ol3turf||{}),function(a){"use strict";var b="along",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1),e=a.utils.getLines(d,1,1),f=e[0],h=a.utils.getFormNumber(g,"distance"),i=a.utils.getFormString(j,"units"),k=turf.along(f,h,i);c.showForm();var l={line:f,distance:h,units:i};c.toolbar.ol3turf.handler.callback(b,k,l)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"distance"],c.prefix),h=a.utils.getName([b,"form"],c.prefix),i=a.utils.getName([b,"ok"],c.prefix),j=a.utils.getName([b,"units"],c.prefix),k=[a.utils.getControlNumber(g,"Distance","Distance along the line","0","any","0"),a.utils.getControlSelect(j,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(i,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(k,h)};return a.controls[b]={create:function(d,e){var f="Find point along line at given distance",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="area",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.area(d),f={input:d};c.toolbar.ol3turf.handler.callback(b,e,f)};return a.controls[b]={create:function(d,e){var f="Measure Area",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="bearing",c=function(c){var d=a.utils.getCollection(c,2,2),e=a.utils.getPoints(d,2,2),f=e[0],g=e[1],h=turf.bearing(f,g),i={start:f,end:g};c.toolbar.ol3turf.handler.callback(b,h,i)};return a.controls[b]={create:function(d,e){var f="Measure Bearing",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="bezier",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1),e=a.utils.getLines(d,1,1),f=e[0],g=a.utils.getFormNumber(i,"resolution"),h=a.utils.getFormNumber(j,"sharpness"),k=turf.bezier(f,g,h);c.showForm();var l={line:f,resolution:g,sharpness:h};c.toolbar.ol3turf.handler.callback(b,k,l)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"form"],c.prefix),h=a.utils.getName([b,"ok"],c.prefix),i=a.utils.getName([b,"resolution"],c.prefix),j=a.utils.getName([b,"sharpness"],c.prefix),k=[a.utils.getControlNumber(i,"Resolution","Time between points (milliseconds)","10000","any","0"),a.utils.getControlNumber(j,"Sharpness","Measure of how curvy the path should be between splines","0.85","0.01","0","1"),a.utils.getControlInput(h,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(k,g)};return a.controls[b]={create:function(d,e){var f="Create bezier curve of line",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="buffer",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1/0),e=a.utils.getFormNumber(g,"distance"),f=a.utils.getFormString(j,"units"),h=turf.buffer(d,e,f);c.showForm();var i={feature:d,distance:e,unit:f};c.toolbar.ol3turf.handler.callback(b,h,i)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"distance"],c.prefix),h=a.utils.getName([b,"form"],c.prefix),i=a.utils.getName([b,"ok"],c.prefix),j=a.utils.getName([b,"units"],c.prefix),k=[a.utils.getControlNumber(g,"Distance","Distance to draw the buffer","0","any","0"),a.utils.getControlSelect(j,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(i,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(k,h)};return a.controls[b]={create:function(d,e){var f="Buffer feature by given radius",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="center",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.center(d),f={features:d};c.toolbar.ol3turf.handler.callback(b,e,f)};return a.controls[b]={create:function(d,e){var f="Measure Center",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="center-of-mass",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.centerOfMass(d),f={features:d};c.toolbar.ol3turf.handler.callback(b,e,f)};return a.controls[b]={create:function(d,e){var f="Measure center of mass",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="centroid",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.centroid(d),f={features:d};c.toolbar.ol3turf.handler.callback(b,e,f)};return a.controls[b]={create:function(d,e){var f="Measure Centroid",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="circle",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1),e=a.utils.getPoints(d,1,1),f=e[0],g=a.utils.getFormNumber(i,"radius"),h=a.utils.getFormNumber(j,"steps"),l=a.utils.getFormString(k,"units"),m=turf.circle(f,g,h,l);c.showForm();var n={center:f,radius:g,steps:h,units:l};c.toolbar.ol3turf.handler.callback(b,m,n)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"form"],c.prefix),h=a.utils.getName([b,"ok"],c.prefix),i=a.utils.getName([b,"radius"],c.prefix),j=a.utils.getName([b,"steps"],c.prefix),k=a.utils.getName([b,"units"],c.prefix),l=[a.utils.getControlNumber(i,"Radius","Radius of the circle","0","any","0"),a.utils.getControlNumber(j,"Steps","Number of steps around circle","3","1","3"),a.utils.getControlSelect(k,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(h,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(l,g)};return a.controls[b]={create:function(d,e){var f="Create circle",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="collect",c=function(c){function d(){try{var d=a.utils.getCollection(c,2,1/0),e=a.utils.getPoints(d,1,d.features.length-1),f=d.features.length-e.length,g=a.utils.getPolygons(d,f,f),i=a.utils.getFormString(h,"In-Property"),k=a.utils.getFormString(j,"Out-Property"),l=turf.featureCollection(g),m=turf.featureCollection(e),n=turf.collect(l,m,i,k);c.showForm();var o={polygons:l,points:m,inProperty:i,outProperty:k};c.toolbar.ol3turf.handler.callback(b,n,o)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"form"],c.prefix),h=a.utils.getName([b,"in","property"],c.prefix),i=a.utils.getName([b,"ok"],c.prefix),j=a.utils.getName([b,"out","property"],c.prefix),k=[a.utils.getControlText(h,"In Property","Property to be nested from"),a.utils.getControlText(j,"Out Property","Property to be nested into"),a.utils.getControlInput(i,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(k,g)};return a.controls[b]={create:function(d,e){var f="Collect points within polygons",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="combine",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.combine(d),f={fc:d};c.toolbar.ol3turf.handler.callback(b,e,f)};return a.controls[b]={create:function(d,e){var f="Combine feature collection",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="concave",c=function(c){function d(){try{var d=a.utils.getCollection(c,3,1/0),e=d.features.length,f=a.utils.getPoints(d,e,e),g=a.utils.getFormNumber(h,"Max Edge"),i=a.utils.getFormString(j,"units"),k=turf.featureCollection(f),l=turf.concave(k,g,i);c.showForm();var m={points:k,maxEdge:g,units:i};c.toolbar.ol3turf.handler.callback(b,l,m)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"form"],c.prefix),h=a.utils.getName([b,"max","edge"],c.prefix),i=a.utils.getName([b,"ok"],c.prefix),j=a.utils.getName([b,"units"],c.prefix),k=[a.utils.getControlNumber(h,"Max Edge Size","Maximum size of an edge necessary for part of the hull to become concave","0","any","0"),a.utils.getControlSelect(j,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(i,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(k,g)};return a.controls[b]={create:function(d,e){var f="Create Concave Hull",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="convex",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.convex(d),f={featurecollection:d};c.toolbar.ol3turf.handler.callback(b,e,f)};return a.controls[b]={create:function(d,e){var f="Create Convex Hull",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="destination",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1),e=a.utils.getPoints(d,1,1),g=e[0],i=a.utils.getFormNumber(h,"distance"),j=a.utils.getFormNumber(f,"bearing"),l=a.utils.getFormString(k,"units"),m=turf.destination(g,i,j,l);c.showForm();var n={from:g,distance:i,bearing:j,units:l};c.toolbar.ol3turf.handler.callback(b,m,n)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"bearing"],c.prefix),g=a.utils.getName([b,"cancel"],c.prefix),h=a.utils.getName([b,"distance"],c.prefix),i=a.utils.getName([b,"form"],c.prefix),j=a.utils.getName([b,"ok"],c.prefix),k=a.utils.getName([b,"units"],c.prefix),l=[a.utils.getControlNumber(f,"Bearing","Bearing angle (degrees)","0","any","-180","180"),a.utils.getControlNumber(h,"Distance","Distance from the starting point","0","any","0"),a.utils.getControlSelect(k,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(j,d,"","OK"),a.utils.getControlInput(g,e,"","Cancel")];c.showForm(l,i)};return a.controls[b]={create:function(d,e){var f="Find destination point from given point",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="difference",c=function(c){var d=a.utils.getCollection(c,2,2),e=a.utils.getPolygons(d,2,2),f=e[0],g=e[1],h=turf.difference(f,g),i={poly1:f,poly2:g};c.toolbar.ol3turf.handler.callback(b,h,i)};return a.controls[b]={create:function(d,e){var f="Create Difference Polygon",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="distance",c=function(c){function d(){try{var d=a.utils.getCollection(c,2,2),e=a.utils.getPoints(d,2,2),f=e[0],g=e[1],h=a.utils.getFormString(i,"units"),j=turf.distance(f,g,h);c.showForm();var k={from:f,to:g,units:h};c.toolbar.ol3turf.handler.callback(b,j,k)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"form"],c.prefix),h=a.utils.getName([b,"ok"],c.prefix),i=a.utils.getName([b,"units"],c.prefix),j=[a.utils.getControlSelect(i,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(h,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(j,g)};return a.controls[b]={create:function(d,e){var f="Find distance between points",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="envelope",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.envelope(d),f={fc:d};c.toolbar.ol3turf.handler.callback(b,e,f)};return a.controls[b]={create:function(d,e){var f="Measure Envelope",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="explode",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.explode(d),f={geojson:d};c.toolbar.ol3turf.handler.callback(b,e,f)};return a.controls[b]={create:function(d,e){var f="Explode feature collection",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="flip",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.flip(d),f={input:d};c.toolbar.ol3turf.handler.callback(b,e,f)};return a.controls[b]={create:function(d,e){var f="Flip features coordinates",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="hex-grid",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1/0),e=a.utils.getFormNumber(g,"cell size"),f=a.utils.getFormString(i,"grid type"),h=a.utils.getFormString(k,"units"),j="triangles"===f,l=turf.bbox(d),m=turf.hexGrid(l,e,h,j);c.showForm();var n={bbox:l,cellSize:e,units:h,triangles:j};c.toolbar.ol3turf.handler.callback(b,m,n)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"cell-size"],c.prefix),h=a.utils.getName([b,"form"],c.prefix),i=a.utils.getName([b,"type"],c.prefix),j=a.utils.getName([b,"ok"],c.prefix),k=a.utils.getName([b,"units"],c.prefix),l=[a.utils.getControlNumber(g,"Cell Size","Dimension of cell","1","any","0"),a.utils.getControlSelect(k,"Units",a.utils.getOptionsUnits()),a.utils.getControlSelect(i,"Type",a.utils.getOptionsGrids()),a.utils.getControlInput(j,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(l,h)};return a.controls[b]={create:function(d,e){var f="Generate Hex Grid",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="inside",c=function(c){var d=a.utils.getCollection(c,2,2),e=a.utils.getPoints(d,1,1),f=a.utils.getPolygonsAll(d,1,1),g=e[0],h=f[0],i=turf.inside(g,h),j={point:g,polygon:h};c.toolbar.ol3turf.handler.callback(b,i,j)};return a.controls[b]={create:function(d,e){var f="Point inside polygon?",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="intersect",c=function(c){var d=a.utils.getCollection(c,2,2),e=a.utils.getPolygonsAll(d,2,2),f=e[0],g=e[1],h=turf.intersect(f,g),i={poly1:f,poly2:g};c.toolbar.ol3turf.handler.callback(b,h,i)};return a.controls[b]={create:function(d,e){var f="Create Intersection Polygon",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="isolines",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1/0),e=a.utils.getFormArray(f,"breaks"),g=a.utils.getFormNumber(j,"resolution"),h=a.utils.getFormString(k,"z"),i=turf.isolines(d,h,g,e);c.showForm();var l={points:d,z:h,resolution:g,breaks:e};c.toolbar.ol3turf.handler.callback(b,i,l)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"breaks"],c.prefix),g=a.utils.getName([b,"cancel"],c.prefix),h=a.utils.getName([b,"form"],c.prefix),i=a.utils.getName([b,"ok"],c.prefix),j=a.utils.getName([b,"resolution"],c.prefix),k=a.utils.getName([b,"z"],c.prefix),l=[a.utils.getControlNumber(j,"Resolution","Resolution of the underlying grid","1","any","0.01"),a.utils.getControlText(k,"Z Property","Property name in points from which z-values will be pulled"),a.utils.getControlText(f,"Breaks","Comma separated list of where to draw contours"),a.utils.getControlInput(i,d,"","OK"),a.utils.getControlInput(g,e,"","Cancel")];c.showForm(l,h)};return a.controls[b]={create:function(d,e){var f="Create isolines",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="kinks",c=function(c){var d=a.utils.getCollection(c,1,1),e=a.utils.getPolygons(d,1,1),f=e[0],g=turf.kinks(f);if(0===g.features.length)throw new Error("No kinks found.");var h={polygon:f};c.toolbar.ol3turf.handler.callback(b,g,h)};return a.controls[b]={create:function(d,e){var f="Create polygon self-intersections",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="line-distance",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1/0),e=a.utils.getFormString(i,"units"),f=turf.lineDistance(d,e);c.showForm();var g={line:d,units:e};c.toolbar.ol3turf.handler.callback(b,f,g)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"form"],c.prefix),h=a.utils.getName([b,"ok"],c.prefix),i=a.utils.getName([b,"units"],c.prefix),j=[a.utils.getControlSelect(i,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(h,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(j,g)};return a.controls[b]={create:function(d,e){var f="Measure Length",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="line-slice-along",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1),e=a.utils.getLines(d,1,1),f=e[0],g=a.utils.getFormNumber(i,"start"),h=a.utils.getFormNumber(j,"stop"),l=g<h;if(l!==!0)throw new Error("Start must be less than stop");var m=a.utils.getFormString(k,"units"),n=turf.lineDistance(f,m);if(g>n)throw new Error("Start must be less than line length");if(h>n)throw new Error("Stop must be less than line length");var o=turf.lineSliceAlong(f,g,h,m);c.showForm();var p={line:f,start:g,stop:h,units:m};c.toolbar.ol3turf.handler.callback(b,o,p)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"form"],c.prefix),h=a.utils.getName([b,"ok"],c.prefix),i=a.utils.getName([b,"start"],c.prefix),j=a.utils.getName([b,"stop"],c.prefix),k=a.utils.getName([b,"units"],c.prefix),l=[a.utils.getControlNumber(i,"Start","Starting distance along the line","0","any","0"),a.utils.getControlNumber(j,"Stop","Stoping distance along the line","0","any","0"),a.utils.getControlSelect(k,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(h,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(l,g)};return a.controls[b]={create:function(d,e){var f="Create line slice",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="midpoint",c=function(c){var d=a.utils.getCollection(c,2,2),e=a.utils.getPoints(d,2,2),f=e[0],g=e[1],h=turf.midpoint(f,g),i={from:f,to:g};c.toolbar.ol3turf.handler.callback(b,h,i)};return a.controls[b]={create:function(d,e){var f="Measure Midpoint",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="nearest",c=function(c){var d=a.utils.getCollection(c,2,1/0),e=d.features.length,f=a.utils.getPoints(d,e,e),g=f[0],h=turf.featureCollection(f.slice(1)),i=turf.nearest(g,h),j={targetPoint:g,points:h};c.toolbar.ol3turf.handler.callback(b,i,j)};return a.controls[b]={create:function(d,e){var f="Find set point nearest to first point",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="planepoint",c=function(c){var d=a.utils.getCollection(c,2,2),e=a.utils.getPoints(d,1,1),f=a.utils.getPolygons(d,1,1),g=e[0],h=f[0],i=turf.planepoint(g,h),j={point:g,triangle:h};c.toolbar.ol3turf.handler.callback(b,i,j)};return a.controls[b]={create:function(d,e){var f="Triangulate a point in a plane",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="point-grid",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1/0),e=a.utils.getFormNumber(g,"cell size"),f=a.utils.getFormString(j,"units"),h=turf.bbox(d),i=turf.pointGrid(h,e,f);c.showForm();var k={bbox:h,cellSize:e,units:f};c.toolbar.ol3turf.handler.callback(b,i,k)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"cell-size"],c.prefix),h=a.utils.getName([b,"form"],c.prefix),i=a.utils.getName([b,"ok"],c.prefix),j=a.utils.getName([b,"units"],c.prefix),k=[a.utils.getControlNumber(g,"Cell Size","Dimension of cell","1","any","0"),a.utils.getControlSelect(j,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(i,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(k,h)};return a.controls[b]={create:function(d,e){var f="Generate Point Grid",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="point-on-line",c=function(c){var d=a.utils.getCollection(c,2,2),e=a.utils.getPoints(d,1,1),f=a.utils.getLines(d,1,1),g=f[0],h=e[0],i=turf.pointOnLine(g,h),j={line:g,point:h};c.toolbar.ol3turf.handler.callback(b,i,j)};return a.controls[b]={create:function(d,e){var f="Project point on line",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="point-on-surface",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.pointOnSurface(d),f={fc:d};c.toolbar.ol3turf.handler.callback(b,e,f)};return a.controls[b]={create:function(d,e){var f="Measure Point on Surface",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="random",c=function(c){function d(){try{var d=null,e=a.utils.getCollection(c,0,1/0);0!==e.features.length&&(d=turf.bbox(e));var f=a.utils.getFormInteger(g,"count"),h=a.utils.getFormInteger(i,"maximum radial length"),k=a.utils.getFormInteger(j,"number of vertices"),m=a.utils.getFormString(l,"type"),n={max_radial_length:h,num_vertices:k};null!==d&&(n.bbox=d);var o=turf.random(m,f,n);c.showForm();var p={type:m,count:f,options:n};c.toolbar.ol3turf.handler.callback(b,o,p)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"count"],c.prefix),h=a.utils.getName([b,"form"],c.prefix),i=a.utils.getName([b,"max-radial-length"],c.prefix),j=a.utils.getName([b,"num-vertices"],c.prefix),k=a.utils.getName([b,"ok"],c.prefix),l=a.utils.getName([b,"type"],c.prefix),m=[a.utils.getControlSelect(l,"Type",a.utils.getOptionsGeometry()),a.utils.getControlNumber(g,"Count","How many geometries should be generated","1","1","1"),a.utils.getControlNumber(j,"# Vertices","Used only for polygon type","10","1","3"),a.utils.getControlNumber(i,"Max Length","Maximum degrees a polygon can extent outwards from its center (degrees)","10","0.01","0","180"),a.utils.getControlInput(k,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(m,h)};return a.controls[b]={create:function(d,e){var f="Create random data",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="sample",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1/0),e=a.utils.getFormInteger(g,"count");if(e>d.features.length)throw new Error("Feature count must be greater than sampling count.");var f=turf.sample(d,e);c.showForm();var h={featurecollection:d,num:e};c.toolbar.ol3turf.handler.callback(b,f,h);
}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"count"],c.prefix),h=a.utils.getName([b,"form"],c.prefix),i=a.utils.getName([b,"ok"],c.prefix),j=[a.utils.getControlNumber(g,"Count","Number of random features to sample","1","1","1"),a.utils.getControlInput(i,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(j,h)};return a.controls[b]={create:function(d,e){var f="Randomly sample features",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="simplify",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1/0),e=a.utils.getFormNumber(j,"tolerance"),f=a.utils.getFormString(i,"quality"),g="high"===f,h=turf.simplify(d,e,g);c.showForm();var k={feature:d,tolerance:e,highQuality:g};c.toolbar.ol3turf.handler.callback(b,h,k)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"form"],c.prefix),h=a.utils.getName([b,"ok"],c.prefix),i=a.utils.getName([b,"quality"],c.prefix),j=a.utils.getName([b,"tolerance"],c.prefix),k=[a.utils.getControlNumber(j,"Tolerance","Simplification tolerance","1","0.01","0"),a.utils.getControlSelect(i,"Quality",a.utils.getOptionsQuality()),a.utils.getControlInput(h,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(k,g)};return a.controls[b]={create:function(d,e){var f="Simplify shape",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="square",c=function(c){var d=a.utils.getCollection(c,1,1/0),e=turf.bbox(d),f=turf.square(e),g=turf.bboxPolygon(f),h={bbox:e};c.toolbar.ol3turf.handler.callback(b,g,h)};return a.controls[b]={create:function(d,e){var f="Create Square",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="square-grid",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1/0),e=a.utils.getFormNumber(g,"cell size"),f=a.utils.getFormString(j,"units"),h=turf.bbox(d),i=turf.squareGrid(h,e,f);c.showForm();var k={bbox:h,cellSize:e,units:f};c.toolbar.ol3turf.handler.callback(b,i,k)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"cell-size"],c.prefix),h=a.utils.getName([b,"form"],c.prefix),i=a.utils.getName([b,"ok"],c.prefix),j=a.utils.getName([b,"units"],c.prefix),k=[a.utils.getControlNumber(g,"Cell Size","Dimension of cell","1","any","0"),a.utils.getControlSelect(j,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(i,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(k,h)};return a.controls[b]={create:function(d,e){var f="Generate Square Grid",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="tag",c=function(c){function d(){try{var d=a.utils.getCollection(c,2,1/0),e=a.utils.getPoints(d,1,d.features.length-1),f=d.features.length-e.length,h=a.utils.getPolygons(d,f,f),i=a.utils.getFormString(g,"field"),k=a.utils.getFormString(j,"out field"),l=turf.featureCollection(h),m=turf.featureCollection(e),n=turf.tag(m,l,i,k);c.showForm();var o={points:m,polygons:l,field:i,outField:k};c.toolbar.ol3turf.handler.callback(b,n,o)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"field-property"],c.prefix),h=a.utils.getName([b,"form"],c.prefix),i=a.utils.getName([b,"ok"],c.prefix),j=a.utils.getName([b,"out-field-property"],c.prefix),k=[a.utils.getControlText(g,"Field","Property in polygons to add to joined point features"),a.utils.getControlText(j,"Out Field","Property in points in which to store joined property from polygons"),a.utils.getControlInput(i,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(k,h)};return a.controls[b]={create:function(d,e){var f="Perform spatial join of points and polygons",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="tin",c=function(c){function d(){try{var d=a.utils.getCollection(c,3,1/0),e=d.features.length,f=a.utils.getPoints(d,e,e);d=turf.featureCollection(f);var g=a.utils.getFormString(i,"z"),h=turf.tin(d,g),j={points:d,z:g};c.toolbar.ol3turf.handler.callback(b,h,j)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"form"],c.prefix),h=a.utils.getName([b,"ok"],c.prefix),i=a.utils.getName([b,"z"],c.prefix),j=[a.utils.getControlText(i,"Z","(Optional) Property from which to pull z values"),a.utils.getControlInput(h,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(j,g)};return a.controls[b]={create:function(d,e){var f="Create TIN",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="tesselate",c=function(c){var d=a.utils.getCollection(c,1,1),e=a.utils.getPolygons(d,1,1),f=e[0],g=turf.tesselate(f),h={polygon:f};c.toolbar.ol3turf.handler.callback(b,g,h)};return a.controls[b]={create:function(d,e){var f="Create tesselation",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";a.toolbars=a.toolbars||{},a.toolbars.aggregation=function(){return["collect"]},a.toolbars.classification=function(){return["nearest"]},a.toolbars.data=function(){return["random","sample"]},a.toolbars.grids=function(){return["hex-grid","point-grid","square-grid","triangle-grid","tesselate"]},a.toolbars.interpolation=function(){return["isolines","planepoint","tin"]},a.toolbars.joins=function(){return["inside","tag","within"]},a.toolbars.measurement=function(){return["distance","line-distance","area","bearing","center-of-mass","center","centroid","midpoint","point-on-surface","envelope","square","circle","along","destination"]},a.toolbars.misc=function(){return["combine","explode","flip","kinks","line-slice-along","point-on-line"]},a.toolbars.transformation=function(){return["bezier","buffer","concave","convex","difference","intersect","simplify","union"]},a.toolbars.all=function(){var b=[];return b.push.apply(b,a.toolbars.measurement()),b.push.apply(b,a.toolbars.transformation()),b.push.apply(b,a.toolbars.misc()),b.push.apply(b,a.toolbars.joins()),b.push.apply(b,a.toolbars.classification()),b.push.apply(b,a.toolbars.aggregation()),b.push.apply(b,a.toolbars.data()),b.push.apply(b,a.toolbars.interpolation()),b.push.apply(b,a.toolbars.grids()),b}}(ol3turf||{}),function(a){"use strict";var b="triangle-grid",c=function(c){function d(){try{var d=a.utils.getCollection(c,1,1/0),e=a.utils.getFormNumber(g,"cell size"),f=a.utils.getFormString(j,"units"),h=turf.bbox(d),i=turf.triangleGrid(h,e,f);c.showForm();var k={bbox:h,cellSize:e,units:f};c.toolbar.ol3turf.handler.callback(b,i,k)}catch(a){c.showMessage(a)}}function e(){c.showForm()}var f=a.utils.getName([b,"cancel"],c.prefix),g=a.utils.getName([b,"cell-size"],c.prefix),h=a.utils.getName([b,"form"],c.prefix),i=a.utils.getName([b,"ok"],c.prefix),j=a.utils.getName([b,"units"],c.prefix),k=[a.utils.getControlNumber(g,"Cell Size","Dimension of cell","1","any","0"),a.utils.getControlSelect(j,"Units",a.utils.getOptionsUnits()),a.utils.getControlInput(i,d,"","OK"),a.utils.getControlInput(f,e,"","Cancel")];c.showForm(k,h)};return a.controls[b]={create:function(d,e){var f="Generate Triangle Grid",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="union",c=function(c){var d=a.utils.getCollection(c,2,2),e=a.utils.getPolygons(d,2,2),f=e[0],g=e[1],h=turf.union(f,g),i={poly1:f,poly2:g};c.toolbar.ol3turf.handler.callback(b,h,i)};return a.controls[b]={create:function(d,e){var f="Create Union Polygon",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{}),function(a){"use strict";var b="within",c=function(c){var d=a.utils.getCollection(c,2,1/0),e=a.utils.getPoints(d,1,d.features.length-1),f=d.features.length-e.length,g=a.utils.getPolygons(d,f,f),h=turf.featureCollection(e),i=turf.featureCollection(g),j=turf.within(h,i);if(0===j.features.length)throw new Error("No points found within.");var k={points:h,polygons:i};c.toolbar.ol3turf.handler.callback(b,j,k)};return a.controls[b]={create:function(d,e){var f="Find points within polygons",g=a.Control.create(d,e,b,f,c);return g}},a}(ol3turf||{});